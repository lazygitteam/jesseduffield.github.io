{"version":3,"sources":["webpack:///./src/pages/about.tsx","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Container/Container.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Segment/SegmentGroup.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Segment/Segment.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_1__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_2__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_3__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_4__","AboutPage","vertical","as","name","Content","href","target","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","n","classnames__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_3___default","_lib__WEBPACK_IMPORTED_MODULE_4__","_lib__WEBPACK_IMPORTED_MODULE_5__","_lib__WEBPACK_IMPORTED_MODULE_6__","_lib__WEBPACK_IMPORTED_MODULE_7__","Container","props","children","className","content","fluid","text","textAlign","classes","Object","rest","ElementType","a","createElement","isNil","handledProps","propTypes","SegmentGroup","compact","horizontal","piled","raised","size","stacked","classnames_default","classNameBuilders","getUnhandledProps","getElementType","react_default","extends_default","lib","Segment_SegmentGroup","Segment","attached","basic","circular","clearing","color","disabled","floated","inverted","loading","padded","secondary","tertiary","Group"],"mappings":"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","file":"component---src-pages-about-tsx-d6884bfab5b05ffcdb6b.js","sourcesContent":["import * as React from \"react\"\nimport { Header, Container, Segment, Icon } from \"semantic-ui-react\"\n\nconst AboutPage = () => {\n  return (\n    <Container>\n      <Segment vertical>\n        <Header as=\"h2\">\n          <Icon name=\"info circle\" />\n          <Header.Content>About</Header.Content>\n        </Header>\n      </Segment>\n      <Segment vertical>\n        <p>This starter was created by @fabien0102.</p>\n        <p>\n          For any question, I'm on{\" \"}\n          <a href=\"https://discord.gg/2bz8EzW\" target=\"blank\">\n            discord #reactiflux/gatsby\n          </a>\n        </p>\n        <p>\n          For any issues, any PR are welcoming\n          <a\n            href=\"https://github.com/fabien0102/gatsby-starter/issues\"\n            target=\"blank\"\n          >\n            {\" \"}\n            on this repository\n          </a>\n        </p>\n      </Segment>\n    </Container>\n  )\n}\n\nexport default AboutPage\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp } from '../../lib';\n/**\n * A container limits content to a maximum width.\n */\n\nfunction Container(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      fluid = props.fluid,\n      text = props.text,\n      textAlign = props.textAlign;\n  var classes = cx('ui', useKeyOnly(text, 'text'), useKeyOnly(fluid, 'fluid'), useTextAlignProp(textAlign), 'container', className);\n  var rest = getUnhandledProps(Container, props);\n  var ElementType = getElementType(Container, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nContainer.handledProps = [\"as\", \"children\", \"className\", \"content\", \"fluid\", \"text\", \"textAlign\"];\nContainer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Container has no maximum width. */\n  fluid: PropTypes.bool,\n\n  /** Reduce maximum width to more naturally accommodate text. */\n  text: PropTypes.bool,\n\n  /** Align container text. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS)\n} : {};\nexport default Container;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly } from '../../lib';\n/**\n * A group of segments can be formatted to appear together.\n */\n\nfunction SegmentGroup(props) {\n  var children = props.children,\n      className = props.className,\n      compact = props.compact,\n      content = props.content,\n      horizontal = props.horizontal,\n      piled = props.piled,\n      raised = props.raised,\n      size = props.size,\n      stacked = props.stacked;\n  var classes = cx('ui', size, useKeyOnly(compact, 'compact'), useKeyOnly(horizontal, 'horizontal'), useKeyOnly(piled, 'piled'), useKeyOnly(raised, 'raised'), useKeyOnly(stacked, 'stacked'), 'segments', className);\n  var rest = getUnhandledProps(SegmentGroup, props);\n  var ElementType = getElementType(SegmentGroup, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nSegmentGroup.handledProps = [\"as\", \"children\", \"className\", \"compact\", \"content\", \"horizontal\", \"piled\", \"raised\", \"size\", \"stacked\"];\nSegmentGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A segment may take up only as much space as is necessary. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Formats content to be aligned horizontally. */\n  horizontal: PropTypes.bool,\n\n  /** Formatted to look like a pile of pages. */\n  piled: PropTypes.bool,\n\n  /** A segment group may be formatted to raise above the page. */\n  raised: PropTypes.bool,\n\n  /** A segment group can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n\n  /** Formatted to show it contains multiple pages. */\n  stacked: PropTypes.bool\n} : {};\nexport default SegmentGroup;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useTextAlignProp, useValueAndKey } from '../../lib';\nimport SegmentGroup from './SegmentGroup';\n/**\n * A segment is used to create a grouping of related content.\n */\n\nfunction Segment(props) {\n  var attached = props.attached,\n      basic = props.basic,\n      children = props.children,\n      circular = props.circular,\n      className = props.className,\n      clearing = props.clearing,\n      color = props.color,\n      compact = props.compact,\n      content = props.content,\n      disabled = props.disabled,\n      floated = props.floated,\n      inverted = props.inverted,\n      loading = props.loading,\n      padded = props.padded,\n      piled = props.piled,\n      raised = props.raised,\n      secondary = props.secondary,\n      size = props.size,\n      stacked = props.stacked,\n      tertiary = props.tertiary,\n      textAlign = props.textAlign,\n      vertical = props.vertical;\n  var classes = cx('ui', color, size, useKeyOnly(basic, 'basic'), useKeyOnly(circular, 'circular'), useKeyOnly(clearing, 'clearing'), useKeyOnly(compact, 'compact'), useKeyOnly(disabled, 'disabled'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(piled, 'piled'), useKeyOnly(raised, 'raised'), useKeyOnly(secondary, 'secondary'), useKeyOnly(stacked, 'stacked'), useKeyOnly(tertiary, 'tertiary'), useKeyOnly(vertical, 'vertical'), useKeyOrValueAndKey(attached, 'attached'), useKeyOrValueAndKey(padded, 'padded'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), 'segment', className);\n  var rest = getUnhandledProps(Segment, props);\n  var ElementType = getElementType(Segment, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nSegment.handledProps = [\"as\", \"attached\", \"basic\", \"children\", \"circular\", \"className\", \"clearing\", \"color\", \"compact\", \"content\", \"disabled\", \"floated\", \"inverted\", \"loading\", \"padded\", \"piled\", \"raised\", \"secondary\", \"size\", \"stacked\", \"tertiary\", \"textAlign\", \"vertical\"];\nSegment.Group = SegmentGroup;\nSegment.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Attach segment to other content, like a header. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['top', 'bottom'])]),\n\n  /** A basic segment has no special formatting. */\n  basic: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** A segment can be circular. */\n  circular: PropTypes.bool,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A segment can clear floated content. */\n  clearing: PropTypes.bool,\n\n  /** Segment can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A segment may take up only as much space as is necessary. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A segment may show its content is disabled. */\n  disabled: PropTypes.bool,\n\n  /** Segment content can be floated to the left or right. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A segment can have its colors inverted for contrast. */\n  inverted: PropTypes.bool,\n\n  /** A segment may show its content is being loaded. */\n  loading: PropTypes.bool,\n\n  /** A segment can increase its padding. */\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** Formatted to look like a pile of pages. */\n  piled: PropTypes.bool,\n\n  /** A segment may be formatted to raise above the page. */\n  raised: PropTypes.bool,\n\n  /** A segment can be formatted to appear less noticeable. */\n  secondary: PropTypes.bool,\n\n  /** A segment can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n\n  /** Formatted to show it contains multiple pages. */\n  stacked: PropTypes.bool,\n\n  /** A segment can be formatted to appear even less noticeable. */\n  tertiary: PropTypes.bool,\n\n  /** Formats content to be aligned as part of a vertical group. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** Formats content to be aligned vertically. */\n  vertical: PropTypes.bool\n} : {};\nexport default Segment;"],"sourceRoot":""}